name: Terraform deployment workflow
on:
  workflow_dispatch: 
    inputs:
      confirm_destory:
        description: Type "yes" to confirm infrastructure destruction'
        required: true 
        type: string
  push:
    branches: [ main ]
    paths: 
      - 'terraform/**'

# To manage your workflow in GitHub Actions & cancel any in-progress jobs if a new one is triggered for the same branch. Prevents race conditions. 
concurrency:
  group: terraform-${{ github.ref }}
  cancel-in-progress: true

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}


  if: github.event.inputs.confirm_destroy == 'yes'

jobs: 
  terraform: 
    name: Terraform
    runs-on: ubuntu-latest

    steps: 
     - name: Checkout code
       uses: actions/checkout@v3

     - name: Configure AWS credentials
       uses: aws-actions/configure-aws-credentials@v1
       with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

     - name: Set up Terraform 
       uses: hashicorp/setup-terraform@v2
       with: 
          terraform_version: "1.5.0"

     - name: Initialise Terraform
       working-directory: ./terraform
       run: terraform init
    
     -  name: Terraform Format
        working-directory: ./terraform
        run: terraform fmt -check

     - name: Terraform Plan
       working-directory: ./terraform 
       run: |
          terraform plan -input=false -out=tfplan

     - name: Terraform Apply 
       if: github.ref == 'refs/heads/main' && github.event_name == 'push'
       working-directory: ./terraform
       run: terraform apply -auto-approve tfplan

        
